SERVER -> CLIENT:
type: connection, message, banlist, active, shutdown, validation, bannedPhrase

connection - notify all active users about connection change
type: connection\n
action: added/removed\n
username: user_123\n

message - send message from sender to specified users in format:
type: message\n
sender: sender's_username\n
messageLine1\n
messageLine2\n
...
message last line\n
\0\0

banlist - send a list of banned phrases in one line separated by coma
type: banlist\n
bannedPhrasesFormatedString\n

active - send a list of active users after validation
type: active\n
user1 user2 user2\n

shutdown - send a message that server goes down
type: shutdown\n

validation - send a message about validation status
type: validation\n
status: username is invalid/username is taken/passed successfully\n

bannedPhrase - send a message that user's message contains a banned phrase
type: bannedPhrase\n
command: !banned


CLIENT -> SERVER:
can send:
1. request for banned phrases list
2. null (on disconnect)
3. message + recipients

1st case: !banned
send a list for banned phrases

2nd case: null
terminate connection

3rd case: message
1. read message line by line until end-of-message signal (\0\0)
  1.1 after reading one line, check if it contains any banned phrases
     1.1.1 if yes: send a message of type: xxx and break message event and start listening for the new message event
     1.1.2 if no: continue reading next line
2. read a line that is: user1 user2 user3
3. share a message